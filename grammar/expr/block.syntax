
blockexpression
    - "{"
    -- there may be as many ; as you need. They are only needed to separate expression
    - (be-part)*
    - "}"

be-part
    / let
    -- return returns from the entire function
    / return
    / "break"
    / "next"
    / loop
    / if
    / for
    / fullexpression
    / ";"

if
 - "if"
 - fullexpression
 - "do"
 - blockexpression

for
 - "for"
 - identifer
 - "in"
 - fullexpression
 - "do"
 - blockexpression

loop
 - "loop"
 - blockexpression

let
 - "let"
 - identifer
 - "="
 - fullexpression

return
 - "return"
 - fullexpression?

